backstage:
  serviceAccount:
    create: true
    name: backstage

  backstage:
    image:
      tag: 1.31.2

    extraEnvVars:
    - name: NODE_ENV
      value: development
    - name: GITHUB_TOKEN
      value: "change me"
    - name: ARGOCD_URL
      value: "http://argocd-server.argo.svc.cluster.local:8080/api/v1"
    - name: ARGOCD_AUTH_TOKEN
      value: "argocd.token"

    appConfig:
      app:
        baseUrl: http://backstage.localhost

      backend: # Note that the baseUrl should be the URL that the browser and other clients
        # should use when communicating with the backend, i.e. it needs to be
        # reachable not just from within the backend host, but from all of your
        # callers. When its value is "http://localhost:7007", it's strictly private
        # and can't be reached by others.
        baseUrl: http://backstage.localhost
        # The listener can also be expressed as a single <host>:<port> string. In this case we bind to
        # all interfaces, the most permissive setting. The right value depends on your specific deployment.
        listen:
          port: 7007

        csp:
          connect-src: ["'self'", 'http:', 'https:']
          # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
          # Default Helmet Content-Security-Policy values can be removed by setting the key to false
        reading:
          allow:
          - host: github.com
          - host: api.github.com
          - host: raw.githubusercontent.com
        cors:
          origin: http://localhost:3000
          methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
          credentials: true
        # This is for local development only, it is not recommended to use this in production
        # The production database configuration is stored in app-config.production.yaml
        database:
          client: better-sqlite3
          connection: ':memory:'
          # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

      integrations:
        github:
        - host: github.com
          # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
          # about setting up the GitHub integration here: https://backstage.io/docs/integrations/github/locations#configuration
          token: ${GITHUB_TOKEN}
        ### Example for how to add your GitHub Enterprise instance using the API:
        # - host: ghe.example.net
        #   apiBaseUrl: https://ghe.example.net/api/v3
        #   token: ${GHE_TOKEN}

      proxy: ### Example for how to add a proxy endpoint for the frontend.
        ### A typical reason to do this is to handle HTTPS and CORS for internal services.
        # '/test':
        #   target: 'https://example.com'
        #   changeOrigin: true
        '/argocd/api':
          target: ${ARGOCD_URL}
          changeOrigin: true
          # only if your argocd api has self-signed cert
          secure: false
          headers:
            Cookie: ${ARGOCD_AUTH_TOKEN}
      techdocs:
        builder: 'local' # Alternatives - 'external'
        generator:
          runIn: 'docker' # Alternatives - 'local'
        publisher:
          type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

      auth: # see https://backstage.io/docs/auth/ to learn about auth providers
        environment: development
        providers: # See https://backstage.io/docs/auth/guest/provider
          guest: {}

      scaffolder:
      # see https://backstage.io/docs/features/software-templates/configuration for software template options

      catalog:
        import:
          entityFilename: catalog-info.yaml
          pullRequestBranchName: backstage-integration
        rules:
        - allow: [Domain, Systems, Group, Component, System, API, Resource, Location]
        locations: # Local example data, file locations are relative to the backend process, typically `packages/backend`
        - type: file
          target: ../../examples/entities.yaml

        # Local example template
        - type: file
          target: ../../examples/template/template.yaml
          rules:
          - allow: [Template]

        # Local example organizational data
        - type: file
          target: ../../examples/org.yaml
          rules:
          - allow: [User, Group]

        ## Uncomment these lines to add more example data
        # - type: url
        #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml

        ## Uncomment these lines to add an example org
        # - type: url
        #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
        #   rules:
        #     - allow: [User, Group]

      kubernetes:
        serviceLocatorMethod:
          type: 'multiTenant'
        clusterLocatorMethods:
        - type: 'config'
          clusters:
          - url: kubernetes.default.svc.cluster.local:443
            name: local
            authProvider: 'serviceAccount'
            skipTLSVerify: false
            skipMetricsLookup: true
      # see https://backstage.io/docs/features/kubernetes/configuration for kubernetes configuration options

      # see https://backstage.io/docs/permissions/getting-started for more on the permission framework
      permission: # setting this to `false` will disable permissions
        enabled: true

  ingress:
    enabled: true
    className: nginx
    host: "backstage.localhost"
